{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": ""
  },
  "host": "localhost:8000",
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
    "/auth/register": {
      "post": {
        "description": "Add user credentials to the database",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The request should consist of a JSON object with the email and password of the user",
            "required": true,
            "schema": {
              "type": "object",
              "example": {
                "email": "janedoe@mckinsey.com",
                "password": "test"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "examples": {
              "application/json": {
                "error": "User already exists",
                "success": false
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "examples": {
              "application/json": {
                "error": "cannot create the user"
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "description": "Verify user credentials and return a JWT token",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The request should consist of a JSON object with the email and password of the user",
            "required": true,
            "schema": {
              "type": "object",
              "example": {
                "email": "janedoe@mckinsey.com",
                "password": "test"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImpvaG5kb2VAbWNraW5zZXkuY29tIiwiaWF0IjoxNjc2NzMyNjExLCJleHAiOjE2NzY3MzYyMTF9.XW3gEQWQEEfCDvzPpOt3-k1TmNLD8P6A8NphWQIZzIw",
                "success": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "examples": {
              "application/json": {
                "message": "\"email\" must be a valid email"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "examples": {
              "application/json": {
                "message": "Invalid credentials",
                "success": false
              }
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "message": "No such user found",
                "success": false
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "retrieves all users from the database",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": [
                {
                  "userId": "a90c610c-1bd5-40c4-8b01-fdd7708f3730",
                  "name": "john Doe",
                  "email": "johndoe@mckinsey.com",
                  "fmno": "328060",
                  "currentEngagementIds": ["d87ffb9b-06f2-4adb-8b6b-140995d97b04"],
                  "caseStudyIds": ["9225cf89-97f7-4ec8-8c36-54c68842a2e6"],
                  "skills": ["React", "Node", "GoLang"],
                  "role": "engineer 1",
                  "guild": "product",
                  "pastEngagementIds": null,
                  "image": "https://cdn-icons-png.flaticon.com/512/64/64572.png",
                  "createdAt": "2023-02-15T04:55:57.645Z",
                  "updatedAt": "2023-02-15T04:55:57.645Z"
                },
                {
                  "userId": "8efb2eef-b1fe-4124-bef1-6a1dcab02f85",
                  "name": "Jane Doe",
                  "email": "janedoe@mckinsey.com",
                  "fmno": "328560",
                  "currentEngagementIds": ["be753dd4-7a33-449a-956a-a359b13282f3"],
                  "caseStudyIds": ["7de2e0b9-a1f4-465f-b2bd-b94316cd24bc"],
                  "skills": ["React", "Node", "Java", "Python", "C++"],
                  "role": "junior engineer",
                  "guild": "swe",
                  "pastEngagementIds": null,
                  "image": "https://cdn-icons-png.flaticon.com/512/64/64572.png",
                  "createdAt": "2023-02-15T04:55:57.645Z",
                  "updatedAt": "2023-02-15T04:55:57.645Z"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized",
            "examples": {
              "application/json": {
                "error": "invalid token"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "examples": {
              "application/json": {
                "error": "invalid token"
              }
            }
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "description": "retrieves the user with given 'userId' from the database",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "uuid"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "userId": "a90c610c-1bd5-40c4-8b01-fdd7708f3730",
                "name": "john Doe",
                "email": "johndoe@mckinsey.com",
                "fmno": "328060",
                "currentEngagementIds": ["d87ffb9b-06f2-4adb-8b6b-140995d97b04"],
                "caseStudyIds": ["9225cf89-97f7-4ec8-8c36-54c68842a2e6"],
                "skills": ["React", "Node", "GoLang"],
                "role": "engineer 1",
                "guild": "product",
                "pastEngagementIds": null,
                "image": "https://cdn-icons-png.flaticon.com/512/64/64572.png",
                "createdAt": "2023-02-15T04:55:57.645Z",
                "updatedAt": "2023-02-15T04:55:57.645Z"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "examples": {
              "application/json": {
                "message": "\"userId\" must be a valid GUID"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "examples": {
              "application/json": {
                "message": "User not found"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "examples": {
              "application/json": {
                "error": "invalid token"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "examples": {
              "application/json": {
                "error": "invalid token"
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/projects": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "404": {
            "description": "Project not found or User not found"
          },
          "400": {
            "description": "Invalid Body Fields"
          }
        }
      }
    },
    "/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": [
                {
                  "engagement_id": "d87ffb9b-06f2-4adb-8b6b-140995d97b04",
                  "name": "Staffing",
                  "tags": ["urgent"],
                  " skills": ["Node", "Angular", "Python"],
                  "guild": "swe",
                  "user_ids": ["a90c610c-1bd5-40c4-8b01-fdd7708f3730"],
                  " case_study_ids": ["9225cf89-97f7-4ec8-8c36-54c68842a2e6"],
                  "status": "ongoing",
                  " start_date": "2023-02-15",
                  "end_date": "2023-03-15",
                  "image": "https://upload.wikimedia.org/wikipedia/commons/c/cf/Angular_full_color_logo.svg",
                  "createdAt": "2023-02-15T04:55:57.645Z",
                  "updatedAt": "2023-02-15T04:55:57.645Z"
                },
                {
                  "engagement_id": "d87ffb9b-06f2-4abbhdb-8b6b-140995d97b04",
                  "name": "Staffing-pipeline",
                  "tags": ["urgent"],
                  " skills": ["Node", "Python"],
                  "guild": "swe",
                  "user_ids": ["a90c610c-1bd5-4mnm0c4-8b01-fdd7708f3730"],
                  " case_study_ids": ["9225cf89-97f7-4ec8-8c36-54c68842a2e6"],
                  "status": "ongoing",
                  "start_date": "2023-02-15",
                  "end_date": "2023-03-15",
                  "image": "https://upload.wikimedia.org/wikipedia/commons/c/cf/Angular_full_color_logo.svg",
                  "createdAt": "2023-02-15T04:55:57.645Z",
                  "updatedAt": "2023-02-15T04:55:57.645Z"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized",
            "examples": {
              "application/json": {
                "error": "invalid token"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "engagement_id": "d87ffb9b-06f2-4abbhdb-8b6b-140995d97b04",
                "name": "Staffing-pipeline",
                "tags": ["urgent"],
                " skills": ["Node", "Python"],
                "guild": "swe",
                "user_ids": ["a90c610c-1bd5-4mnm0c4-8b01-fdd7708f3730"],
                " case_study_ids": ["9225cf89-97f7-4ec8-8c36-54c68842a2e6"],
                "status": "ongoing",
                "start_date": "2023-02-15",
                "end_date": "2023-03-15",
                "image": "https://upload.wikimedia.org/wikipedia/commons/c/cf/Angular_full_color_logo.svg",
                "createdAt": "2023-02-15T04:55:57.645Z",
                "updatedAt": "2023-02-15T04:55:57.645Z"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "examples": {
              "application/json": {
                "error": "invalid token"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "message": "engagement has been deleted"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "examples": {
              "application/json": {
                "error": "invalid token"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
